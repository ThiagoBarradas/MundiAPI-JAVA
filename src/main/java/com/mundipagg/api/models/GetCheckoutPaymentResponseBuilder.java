/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class GetCheckoutPaymentResponseBuilder {
    //the instance to build
    private GetCheckoutPaymentResponse getCheckoutPaymentResponse;

    /**
     * Default constructor to initialize the instance
     */
    public GetCheckoutPaymentResponseBuilder() {
        getCheckoutPaymentResponse = new GetCheckoutPaymentResponse();
    }

    public GetCheckoutPaymentResponseBuilder id(String id) {
        getCheckoutPaymentResponse.setId(id);
        return this;
    }

    /**
     * Meio de pagamento padrão no checkout
     */
    public GetCheckoutPaymentResponseBuilder defaultPaymentMethod(String defaultPaymentMethod) {
        getCheckoutPaymentResponse.setDefaultPaymentMethod(defaultPaymentMethod);
        return this;
    }

    /**
     * Url de redirecionamento de sucesso após o checkou
     */
    public GetCheckoutPaymentResponseBuilder successUrl(String successUrl) {
        getCheckoutPaymentResponse.setSuccessUrl(successUrl);
        return this;
    }

    /**
     * Url para pagamento usando o checkout
     */
    public GetCheckoutPaymentResponseBuilder paymentUrl(String paymentUrl) {
        getCheckoutPaymentResponse.setPaymentUrl(paymentUrl);
        return this;
    }

    /**
     * Código da afiliação onde o pagamento será processado no gateway
     */
    public GetCheckoutPaymentResponseBuilder gatewayAffiliationId(String gatewayAffiliationId) {
        getCheckoutPaymentResponse.setGatewayAffiliationId(gatewayAffiliationId);
        return this;
    }

    /**
     * Meios de pagamento aceitos no checkout
     */
    public GetCheckoutPaymentResponseBuilder acceptedPaymentMethods(List<String> acceptedPaymentMethods) {
        getCheckoutPaymentResponse.setAcceptedPaymentMethods(acceptedPaymentMethods);
        return this;
    }

    /**
     * Status do checkout
     */
    public GetCheckoutPaymentResponseBuilder status(String status) {
        getCheckoutPaymentResponse.setStatus(status);
        return this;
    }

    /**
     * Pular tela de sucesso pós-pagamento?
     */
    public GetCheckoutPaymentResponseBuilder skipCheckoutSuccessPage(boolean skipCheckoutSuccessPage) {
        getCheckoutPaymentResponse.setSkipCheckoutSuccessPage(skipCheckoutSuccessPage);
        return this;
    }

    /**
     * Data de criação
     */
    public GetCheckoutPaymentResponseBuilder createdAt(DateTime createdAt) {
        getCheckoutPaymentResponse.setCreatedAt(createdAt);
        return this;
    }

    /**
     * Data de atualização
     */
    public GetCheckoutPaymentResponseBuilder updatedAt(DateTime updatedAt) {
        getCheckoutPaymentResponse.setUpdatedAt(updatedAt);
        return this;
    }

    /**
     * Torna o objeto customer editável
     */
    public GetCheckoutPaymentResponseBuilder customerEditable(boolean customerEditable) {
        getCheckoutPaymentResponse.setCustomerEditable(customerEditable);
        return this;
    }

    /**
     * Dados do comprador
     */
    public GetCheckoutPaymentResponseBuilder customer(GetCustomerResponse customer) {
        getCheckoutPaymentResponse.setCustomer(customer);
        return this;
    }

    /**
     * Dados do endereço de cobrança
     */
    public GetCheckoutPaymentResponseBuilder billingaddress(GetAddressResponse billingaddress) {
        getCheckoutPaymentResponse.setBillingaddress(billingaddress);
        return this;
    }

    /**
     * Configurações de cartão de crédito
     */
    public GetCheckoutPaymentResponseBuilder creditCard(GetCheckoutCardPaymentResponse creditCard) {
        getCheckoutPaymentResponse.setCreditCard(creditCard);
        return this;
    }

    /**
     * Configurações de boleto
     */
    public GetCheckoutPaymentResponseBuilder boleto(GetCheckoutBoletoPaymentResponse boleto) {
        getCheckoutPaymentResponse.setBoleto(boleto);
        return this;
    }

    /**
     * Valor em centavos
     */
    public GetCheckoutPaymentResponseBuilder amount(Integer amount) {
        getCheckoutPaymentResponse.setAmount(amount);
        return this;
    }

    /**
     * Data de cancelamento
     */
    public GetCheckoutPaymentResponseBuilder canceledAt(DateTime canceledAt) {
        getCheckoutPaymentResponse.setCanceledAt(canceledAt);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GetCheckoutPaymentResponse build() {
        return getCheckoutPaymentResponse;
    }
}