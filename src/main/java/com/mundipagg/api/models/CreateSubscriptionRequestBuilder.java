/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mundipagg.api.models;

import java.util.*;

public class CreateSubscriptionRequestBuilder {
    //the instance to build
    private CreateSubscriptionRequest createSubscriptionRequest;

    /**
     * Default constructor to initialize the instance
     */
    public CreateSubscriptionRequestBuilder() {
        createSubscriptionRequest = new CreateSubscriptionRequest();
    }

    public CreateSubscriptionRequestBuilder planId(String planId) {
        createSubscriptionRequest.setPlanId(planId);
        return this;
    }

    public CreateSubscriptionRequestBuilder customer(CreateCustomerRequest customer) {
        createSubscriptionRequest.setCustomer(customer);
        return this;
    }

    public CreateSubscriptionRequestBuilder creditCard(CreateCreditCardRequest creditCard) {
        createSubscriptionRequest.setCreditCard(creditCard);
        return this;
    }

    public CreateSubscriptionRequestBuilder code(String code) {
        createSubscriptionRequest.setCode(code);
        return this;
    }

    public CreateSubscriptionRequestBuilder customerId(String customerId) {
        createSubscriptionRequest.setCustomerId(customerId);
        return this;
    }

    public CreateSubscriptionRequestBuilder creditCardId(String creditCardId) {
        createSubscriptionRequest.setCreditCardId(creditCardId);
        return this;
    }

    public CreateSubscriptionRequestBuilder creditCardGatewayId(String creditCardGatewayId) {
        createSubscriptionRequest.setCreditCardGatewayId(creditCardGatewayId);
        return this;
    }

    public CreateSubscriptionRequestBuilder paymentMethod(String paymentMethod) {
        createSubscriptionRequest.setPaymentMethod(paymentMethod);
        return this;
    }

    public CreateSubscriptionRequestBuilder billingType(String billingType) {
        createSubscriptionRequest.setBillingType(billingType);
        return this;
    }

    public CreateSubscriptionRequestBuilder statementDescriptor(String statementDescriptor) {
        createSubscriptionRequest.setStatementDescriptor(statementDescriptor);
        return this;
    }

    public CreateSubscriptionRequestBuilder description(String description) {
        createSubscriptionRequest.setDescription(description);
        return this;
    }

    public CreateSubscriptionRequestBuilder currency(String currency) {
        createSubscriptionRequest.setCurrency(currency);
        return this;
    }

    public CreateSubscriptionRequestBuilder interval(String interval) {
        createSubscriptionRequest.setInterval(interval);
        return this;
    }

    public CreateSubscriptionRequestBuilder intervalCount(int intervalCount) {
        createSubscriptionRequest.setIntervalCount(intervalCount);
        return this;
    }

    public CreateSubscriptionRequestBuilder pricingScheme(CreatePricingSchemeRequest pricingScheme) {
        createSubscriptionRequest.setPricingScheme(pricingScheme);
        return this;
    }

    public CreateSubscriptionRequestBuilder items(List<CreateSubscriptionItemRequest> items) {
        createSubscriptionRequest.setItems(items);
        return this;
    }

    public CreateSubscriptionRequestBuilder shipping(CreateShippingRequest shipping) {
        createSubscriptionRequest.setShipping(shipping);
        return this;
    }

    public CreateSubscriptionRequestBuilder discounts(List<CreateDiscountRequest> discounts) {
        createSubscriptionRequest.setDiscounts(discounts);
        return this;
    }

    public CreateSubscriptionRequestBuilder metadata(LinkedHashMap<String, String> metadata) {
        createSubscriptionRequest.setMetadata(metadata);
        return this;
    }

    public CreateSubscriptionRequestBuilder setup(CreateSetupRequest setup) {
        createSubscriptionRequest.setSetup(setup);
        return this;
    }

    public CreateSubscriptionRequestBuilder billingDay(Integer billingDay) {
        createSubscriptionRequest.setBillingDay(billingDay);
        return this;
    }

    public CreateSubscriptionRequestBuilder installments(Integer installments) {
        createSubscriptionRequest.setInstallments(installments);
        return this;
    }

    public CreateSubscriptionRequestBuilder startAt(Date startAt) {
        createSubscriptionRequest.setStartAt(startAt);
        return this;
    }

    public CreateSubscriptionRequestBuilder minimumPrice(Integer minimumPrice) {
        createSubscriptionRequest.setMinimumPrice(minimumPrice);
        return this;
    }

    public CreateSubscriptionRequestBuilder cycles(Integer cycles) {
        createSubscriptionRequest.setCycles(cycles);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreateSubscriptionRequest build() {
        return createSubscriptionRequest;
    }
}